<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Event\EventInterface;

/**
 * Novedades Controller
 *
 * @property \App\Model\Table\NovedadesTable $Novedades
 */
class NovedadesController extends AppController
{
    protected $_localidades_number = [
        1 => 'Miraflores',
        2 =>  'Mision Nueva Pompeya',
        3 => 'Comandancia Frias',
        4 =>  'El Sauzalito',
        5 => 'Villa Rio Bermejito',
        6 => 'Fortin Lavalle',

    ];

    public function beforeFilter(EventInterface $event)
    {
        $this->Auth->allow();
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $novedades = $this->paginate($this->Novedades);

        //Recupero los datos de la URL
        $data_url = $this->request->getQuery();
        //$novedades= $data_url['Novedades'];

        $artesanos = $this->Novedades->find('all', [])
            ->orderAsc('localidad');

        $this->set('artesanos', $artesanos);
        //$this->set('categoria', $categoria);

    }

    public function view($id = null)
    {
        $artesanos = $this->paginate($this->Novedades);

        $this->set('artesanos', $artesanos);
    }

    public function add()
    {
        //consulto a la tabla y traigo los que no estan cargados
        $artesanos = $this->Novedades->find('all', [
            'fields' => ['idnovedades']
        ])->where(['localidad' => 1]);


        $novedades = $this->Novedades->newEntity();
        if ($this->request->is('post')) {

            $data = $this->request->getData();


            if($data['foto_dir']['name'] != '')
            {

                if(($data['foto_dir']['size'] / 1024) > 5120)
                {
                    //Excedi los 2 MB, informo
                    $this->Flash->error(__('Seleccione una imágen con un tamaño inferior a 5MB'));
                } else {

                    //procedo a trabajar porque cumplio las funciones
                    //Llamo al controlador de archivos
                    $filesManagerController = New FilesManagerController();

                    $result_save = $filesManagerController->uploadFiles($data['foto_dir'], FOTOS);

                    if (!$result_save)
                    {
                        $this->Flash->error(__('Error al almacenar los cambios. Intenta nuevamente'));
                    } else {

                        $novedades->photo = $result_save;
                        $novedades->folder = '../'. FOTOS_SHORT;

                        $novedades = $this->Novedades->patchEntity($novedades, $data);
                        if ($this->Novedades->save($novedades)) {
                            $this->Flash->success(__('El artesano se ha guarado con éxito.'));

                            return $this->redirect(['action' => 'view']);
                        }
                        $this->Flash->error(__('El artesano no se ha guardado. Por favor intente de nuevo.'));

                    }

                }
            } else {

                $novedades = $this->Novedades->patchEntity($novedades, $data);
                if ($this->Novedades->save($novedades)) {
                    $this->Flash->success(__('El artesano se ha guarado con éxito.'));

                    return $this->redirect(['action' => 'view']);
                }
                $this->Flash->error(__('El artesano no se ha guardado. Por favor intente de nuevo.'));

            }


        }

        //construyo los datos a mostrar
        //$localidades = $this->_localidades;
        //$this->set(compact('localidades'));


        //categorias

        //$categorias_model = $this->loadModel('Categorias');
        //$tipo_model = $this->loadModel('Tipo');
        //$subtipo_model = $this->loadModel('Subtipo');


        /*$categorias = $categorias_model->find('list', [

            'keyField' => 'idcategorias',
            'valueField' => 'name'
        ]);

        $this->set(compact('categorias'));

        $tipo = $tipo_model->find('list', [

            'keyField' => 'idtipo',
            'valueField' => 'name'
        ]);

        $this->set(compact('tipo'));

        $subtipo = $subtipo_model->find('list', [

            'keyField' => 'idsubtipo',
            'valueField' => 'name'
        ]);

        $this->set(compact('subtipo'));*/


        //construyo los datos a mostrar
        $localidades_number = $this->_localidades_number;

        $this->set(compact('localidades_number'));



        $this->set(compact('novedades'));
    }

    public function edit()
    {   
       $novedades = $this->Novedades->newEntity();

        //Recupero los datos de la URL
        $data_url = $this->request->getQuery();


        $categoria = $data_url['Categoria'];
        $context = $data_url['Context'];
        $id = $data_url['id'];

        $novedades = $this->Novedades->get($id, [
            'contain' => []]);

        if ($this->request->is(['patch', 'post', 'put'])) {
            $novedades = $this->Novedades->patchEntity($novedades, $this->request->getData());
            if(!empty($novedades['foto_dir']['name'])){
                $fileName = $novedades['foto_dir']['name'];
                $uploadPath = 'integrantes/';
                $uploadFile = $uploadPath.$fileName;
                if(move_uploaded_file($novedades['foto_dir']['tmp_name'],$uploadFile)){
                    $uploadData = $this->Novedades->patchEntity($uploadData, $novedades);
                    $uploadData->name = $fileName;
                    $uploadData->photo_dir = $uploadPath;
                    if ($this->Novedades->save($uploadData)) {
                        $this->Flash->success(__('File has been uploaded and updated successfully.'));
                    }else{
                        $this->Flash->error(__('Unable to upload file, please try again.'));
                    }
                }else{
                    $this->Flash->error(__('Unable to upload file, please try again.'));
                }
            }else{
                $this->Flash->error(__('Please choose a file to upload.'));
            }

            if ($this->Novedades->save($novedades)) {

                $this->Flash->success(__('El registro se ha actualizado con éxito'));

                return $this->redirect(['action' => 'view', '?' => ['Categoria' => 'Novedades', 'Context' => 'Admin']]);
            }
            $this->Flash->error(__('Error al guardar el registro.'));

        }

        $this->set(compact('novedades'));
        $this->set('_serialize', ['novedades']);

        $this->set('categoria', $categoria);

    }
}
